==8324== Memcheck, a memory error detector
==8324== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8324== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==8324== Command: ./build/cnn_test
==8324== Parent PID: 18268
==8324== 
--8324-- 
--8324-- Valgrind options:
--8324--    --leak-check=full
--8324--    --show-leak-kinds=all
--8324--    --track-origins=yes
--8324--    --verbose
--8324--    --log-file=valgrind-out.txt
--8324-- Contents of /proc/version:
--8324--   Linux version 3.10.0-1160.76.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Wed Aug 10 16:21:17 UTC 2022
--8324-- 
--8324-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--8324-- Page sizes: currently 4096, max supported 4096
--8324-- Valgrind library directory: /usr/libexec/valgrind
--8324-- Reading syms from /home/pt/xzhong/Downloads/CNN_C-test/build/cnn_test
--8324-- Reading syms from /usr/lib64/ld-2.17.so
--8324-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--8324--    object doesn't have a symbol table
--8324--    object doesn't have a dynamic symbol table
--8324-- Scheduler: using generic scheduler lock implementation.
--8324-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==8324== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8324-by-xzhong-on-galaxy.ecdl.hut.fi
==8324== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8324-by-xzhong-on-galaxy.ecdl.hut.fi
==8324== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8324-by-xzhong-on-galaxy.ecdl.hut.fi
==8324== 
==8324== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8324== don't want to do, unless you know exactly what you're doing,
==8324== or are doing some strange experiment):
==8324==   /usr/libexec/valgrind/../../bin/vgdb --pid=8324 ...command...
==8324== 
==8324== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8324==   /path/to/gdb ./build/cnn_test
==8324== and then give GDB the following command
==8324==   target remote | /usr/libexec/valgrind/../../bin/vgdb --pid=8324
==8324== --pid is optional if only one valgrind process is running
==8324== 
--8324-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c7ed5 (???)
--8324-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x580c7eef (???)
--8324-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--8324-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==8324== WARNING: new redirection conflicts with existing -- ignoring it
--8324--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x580c7ed5 ???
--8324--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c2d1b0 strlen
--8324-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e300 (strcmp)
--8324-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31f90 (mempcpy)
--8324-- Reading syms from /usr/lib64/libm-2.17.so
--8324-- Reading syms from /usr/lib64/libc-2.17.so
--8324-- REDIR: 0x51c91d0 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--8324-- REDIR: 0x51c5f40 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--8324-- REDIR: 0x51cb4d0 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--8324-- REDIR: 0x51c89a0 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--8324-- REDIR: 0x51c8950 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--8324-- REDIR: 0x51c7930 (libc.so.6:__GI_strrchr) redirected to 0x4c2cb70 (__GI_strrchr)
--8324-- REDIR: 0x51c5e60 (libc.so.6:__GI_strlen) redirected to 0x4c2d110 (__GI_strlen)
--8324-- REDIR: 0x51bf160 (libc.so.6:calloc) redirected to 0x4c2bff3 (calloc)
--8324-- REDIR: 0x51c8b70 (libc.so.6:__GI_mempcpy) redirected to 0x4c31cc0 (__GI_mempcpy)
--8324-- REDIR: 0x51cf4b0 (libc.so.6:strchrnul) redirected to 0x4c31ab0 (strchrnul)
--8324-- REDIR: 0x51beb60 (libc.so.6:free) redirected to 0x4c2afe6 (free)
--8324-- REDIR: 0x51be740 (libc.so.6:malloc) redirected to 0x4c29eec (malloc)
==8324== 
==8324== HEAP SUMMARY:
==8324==     in use at exit: 0 bytes in 0 blocks
==8324==   total heap usage: 477 allocs, 477 frees, 29,360 bytes allocated
==8324== 
==8324== All heap blocks were freed -- no leaks are possible
==8324== 
==8324== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
